.comments > * + * {
  margin-top: var(--comment-gap);
}
.comments-content > * + * {
  margin-top: var(--comment-gap);
}
.comments-replies {
  margin-top: var(--comment-gap);
  padding-inline-start: 1.5rem;
  border-inline-start: 2px solid var(--color-border);
}
.comments-replies > * + * {
  margin-top: 2rem;
}
.comments-replies:not(:where(.has-reply-form, .has-replies)) {
  display: none;
}
.comments-load:checked + label, .comments-load:not(:checked) ~ .comments {
  display: none;
}
.comments iframe {
  color-scheme: auto;
}
[data-theme=dark] .comments iframe[src*="disqus.com"] {
  color-scheme: dark;
}

.comment-header {
  display: flex;
  gap: 1rem;
  align-items: center;
  margin-bottom: 1rem;
}
.comment-iframe {
  padding: 1rem;
  background-color: var(--bg-inset);
}
.comment-iframe iframe {
  width: 100%;
}
.comment-author {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  font-weight: 500;
}
.comment-badge {
  --i-size: 18px;
}
.comment-time {
  display: block;
  color: var(--color-subtle);
}
.comment-footer {
  margin-top: 1rem;
  display: flex;
}
.comment-restore-button {
  padding: 1rem;
  width: 100%;
}
.comment-restore-button:not(.is-replying) {
  display: none;
}
.comment-reply-button {
  padding: 0.25rem;
  margin-inline-end: 0.5rem;
}
.comment-delete-button {
  padding: 0.25rem;
}

.typography :where(h1, h2, h3, h4, h5, h6) {
  margin-bottom: var(--typography-spacing-headings);
  font-family: var(--font-title);
  color: var(--color-title);
  font-weight: 800;
}
.typography :where(h1) {
  font-size: clamp(1.5rem, 5vw, 1.75rem);
}
.typography :where(h2) {
  font-size: clamp(1.25rem, 5vw, 1.5rem);
}
.typography :where(h3) {
  font-size: 1.25rem;
}
.typography :where(h4) {
  font-size: 1.125rem;
}
.typography :where(blockquote) {
  border-inline-start: 4px solid var(--color-border);
  padding-inline-start: 1.5rem;
  position: relative;
}
.typography :where(ul, ol) {
  padding-inline-start: 1.5rem;
}
.typography :where(ul) {
  list-style: disc;
}
.typography :where(ol) {
  list-style: decimal;
}
.typography :where(figure) {
  position: relative;
}
.typography :where(figure) :where(figcaption) {
  text-align: center;
  margin-top: 0.75rem;
  font-size: 0.875rem;
}
.typography :where(iframe[src^=http]) {
  width: 100%;
  height: auto;
  aspect-ratio: 16/9;
}
.typography :where(code) {
  font-family: var(--font-monospace);
  direction: ltr;
}
.typography :where(pre) {
  position: relative;
}
.typography :where(pre > code) {
  background-color: var(--code-bg);
  color: var(--white);
  display: block;
  overflow-x: auto;
  white-space: pre;
  font-size: 0.875rem;
  padding: 1.5rem;
  border-radius: 0.5rem;
}
.typography :where(table) :where(tr > th) {
  font-weight: 500;
  color: var(--color-title);
}
.typography :where(table) :where(tr > *) {
  padding: 0.75rem;
  border: 1px solid var(--color-border);
  word-break: normal;
}
.typography :where([class*=buttons]) {
  display: flex;
  flex-wrap: wrap;
  gap: var(--typography-inline-spacer);
}
.typography :where([class*=columns]) {
  display: flex;
  flex-wrap: wrap;
  align-items: flex-start;
  gap: var(--typography-spacing);
}
.typography :where([class*=columns]) > * {
  flex: 1 1 0;
  margin: 0;
}
@media (max-width: 991px) {
  .typography :where([class*=columns]) {
    flex-direction: column;
  }
}
.typography :where([class*=gallery]) {
  display: flex;
  flex-wrap: wrap;
  gap: var(--typography-gallery-spacer);
}
.typography :where([class*=gallery]) img {
  -o-object-fit: cover;
     object-fit: cover;
}
.typography :where([class*=gallery]) > * {
  flex: 1 1 var(--typography-gallery-columns);
  margin: 0;
}
.typography :where([class*=gallery]) > * img {
  width: 100%;
  height: 100%;
}
.typography :where([class*=gallery]) figcaption {
  background-image: var(--gradient-mask);
  color: var(--white);
  position: absolute;
  inset: auto 0 0;
  padding: 0.75rem;
}
.typography :where([class*=media-text]) {
  align-items: center;
  display: flex;
  flex-wrap: wrap;
  gap: var(--typography-spacing);
}
.typography :where([class*=media-text]) > * {
  flex: 1 1 0;
}
.typography :where(.separator, a, img, p):where([style*=margin-], [style*=padding]):not([style*=float]) {
  margin-right: 0 !important;
  margin-left: 0 !important;
  padding: 0 !important;
}
.typography :where(.separator[style*="text-align: center"]) img {
  margin-right: auto;
  margin-left: auto;
}
.typography img[data-original-width] {
  display: inline-block;
  max-width: 100% !important;
  height: auto !important;
  vertical-align: top;
}
.typography :where(br):not(:where(p > *)) {
  display: none;
}
.typography > :where(div):not(:where(:last-child)):not(:where(video[class], audio[class], :last-child, :where(figure, blockquote) :last-of-type, :where([class*=gallery] *))),
.typography :where(p, figure, img, blockquote, ul, ol, pre, table, video, audio, iframe, details):not(:where(video[class], audio[class], :last-child, :where(figure, blockquote) :last-of-type, :where([class*=gallery] *))) {
  margin-bottom: var(--typography-spacing);
}

.code-copy {
  position: absolute;
  inset: 0.5rem 0.5rem auto auto;
  padding: 0.5rem 0.75rem;
  background-color: rgba(0, 0, 0, 0.5);
  color: #fff;
  border-radius: 0.5rem;
  transition: 0.3s background-color;
  line-height: 1.5;
  font-size: 0.875rem;
}
.code-copy:hover {
  background-color: rgba(0, 0, 0, 0.75);
}
.code-copy::before {
  content: var(--copy-text);
}
.code-copy.is-copied::before {
  content: var(--copied-text);
}

.hljs-comment, .hljs-meta {
  color: var(--code-color-comment);
}
.hljs-emphasis, .hljs-quote, .hljs-string, .hljs-strong, .hljs-template-variable, .hljs-variable {
  color: var(--code-color-string);
}
.hljs-keyword, .hljs-selector-tag, .hljs-type {
  color: var(--code-color-selector);
}
.hljs-attribute, .hljs-bullet, .hljs-literal, .hljs-symbol {
  color: var(--code-color-property);
}
.hljs-tag {
  color: var(--code-color-tag);
}
.hljs-name, .hljs-section {
  color: var(--code-color-tag-name);
}
.hljs-selector-class {
  color: var(--code-color-class);
}
.hljs-number {
  color: var(--code-color-number);
}
.hljs-attr, .hljs-selector-attr, .hljs-selector-id, .hljs-selector-pseudo, .hljs-title {
  color: var(--code-color-attr);
}

.spoiler {
  padding: var(--form-padding);
  border-top: 1px solid var(--color-border);
  border-bottom: 1px solid var(--color-border);
}
.spoiler summary {
  display: flex;
  justify-content: space-between;
  cursor: pointer;
}
.spoiler summary::after {
  font-weight: 300;
  content: var(--show-more-text);
}
.spoiler[open] > summary {
  margin-bottom: var(--typography-spacing);
}
.spoiler[open] > summary::after {
  content: var(--show-less-text);
}

.accordion details {
  margin: 0;
  padding: var(--form-padding);
  border-top: 1px solid var(--color-border);
}
.accordion details:last-child {
  border-bottom: 1px solid var(--color-border);
}
.accordion details[open] summary::after {
  content: "\2212";
}
.accordion summary {
  width: 100%;
  display: flex;
  justify-content: space-between;
  cursor: pointer;
}
.accordion summary::after {
  content: "\002B";
  font-size: 21px;
  line-height: 1;
  font-weight: 300;
}
.accordion-item {
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.toc {
  padding: var(--form-padding);
  border-top: 1px solid var(--color-border);
  border-bottom: 1px solid var(--color-border);
}
.toc:not(.toc-loaded) {
  display: flex;
  justify-content: space-between;
}
.toc:not(.toc-loaded)::after {
  font-weight: 300;
  content: var(--show-more-text);
}
.toc:not(.toc-loaded)::before {
  content: var(--toc-text);
}
.toc input:not(:checked) + *::after {
  content: var(--show-more-text);
}
.toc input:not(:checked) + * + * {
  display: none;
}
.toc-list {
  list-style: none;
  padding: 0;
  counter-reset: coffee;
}
.toc-list .toc-list {
  padding-inline-start: 1.25rem;
}
.toc-item {
  counter-increment: coffee;
}
.toc-item::before {
  content: counters(coffee, ".") ".";
  padding-inline-end: 0.75rem;
}
.toc-toggle {
  display: flex;
  align-items: center;
  justify-content: space-between;
  cursor: pointer;
}
.toc-toggle::after {
  content: var(--show-less-text);
}
.toc-toggle::before {
  content: var(--toc-text);
}
.toc-link:not(:hover) {
  color: var(--color-text);
}
.toc-content {
  flex-direction: column;
  display: flex;
  padding-top: 1rem;
}

.related {
  --cols-min: var(--related-min-width);
}
.related-image {
  background-color: var(--bg-inset);
}
.related-item:not(:hover) {
  color: var(--color-title);
}