// Typography
// A good practice is to keep specificity as low as possible, use ":where" to achieve it.
// @docs: https://developer.mozilla.org/en-US/docs/Web/CSS/:where
.typography {
  // Headings
  :where(h1, h2, h3, h4, h5, h6) {
    margin-bottom: var(--typography-spacing-headings);
    font-family: var(--font-title);
    color: var(--color-title);
    font-weight: 800;
  }

  :where(h1) {
    font-size: clamp(1.5rem, 5vw, 1.75rem)
  }

  :where(h2) {
    font-size: clamp(1.25rem, 5vw, 1.5rem)
  }

  :where(h3) {
    font-size: 1.25rem
  }

  :where(h4) {
    font-size: 1.125rem
  }

  // Blockquote
  :where(blockquote) {
    border-inline-start: 4px solid var(--color-border);
    padding-inline-start: 1.5rem;
    position: relative;
  }

  // Lists
  :where(ul, ol) {
    padding-inline-start: 1.5rem;
  }

  :where(ul) {
    list-style: disc;
  }

  :where(ol) {
    list-style: decimal;
  }

  // Images
  :where(figure) {
    position: relative;

    :where(figcaption) {
      text-align: center;
      margin-top: 0.75rem;
      font-size: .875rem;
    }
  }

  // Videos
  :where(iframe[src^=http]) {
    width: 100%;
    height: auto;
    aspect-ratio: 16/9;
  }

  // Code
  :where(code) {
    font-family: var(--font-monospace);
    direction: ltr;
  }

  :where(pre) {
    position: relative;
  }

  :where(pre > code) {
    background-color: var(--code-bg);
    color: var(--white);
    display: block;
    overflow-x: auto;
    white-space: pre;
    font-size: .875rem;
    padding: 1.5rem;
    border-radius: 0.5rem;
  }

  // Table
  :where(table) {
    :where(tr > th) {
      font-weight: 500;
      color: var(--color-title);
    }

    :where(tr > *) {
      padding: .75rem;
      border: 1px solid var(--color-border);
      word-break: normal;
    }
  }

  // Buttons Container
  :where([class*=buttons]) {
    display: flex;
    flex-wrap: wrap;
    gap: var(--typography-inline-spacer);
  }

  // Create Columns
  :where([class*=columns]) {
    display: flex;
    flex-wrap: wrap;
    align-items: flex-start;
    gap: var(--typography-spacing);

    > * { 
      flex: 1 1 0;
      margin: 0;
    }

    @include breakpoint(l, max) {
      flex-direction: column
    }
  }
  
  // Create Gallery
  :where([class*=gallery]) {
    display: flex;
    flex-wrap: wrap;
    gap: var(--typography-gallery-spacer);

    img {
      object-fit: cover
    }

    > * {
      flex: 1 1 var(--typography-gallery-columns);
      margin: 0;

      img {
        width: 100%;
        height: 100%;
      }
    }

    figcaption {
      background-image: var(--gradient-mask);
      color: var(--white);
      position: absolute;
      inset: auto 0 0;
      padding: .75rem;
    }
  }

  // Create Media Text
  :where([class*=media-text]) {
    align-items: center;
    display: flex;
    flex-wrap: wrap;
    gap: var(--typography-spacing);
  
    > * {
      flex: 1 1 0;
    }
  }

  // Blogger Fixes
  // Fix mobile scrolling and unnecessary padding
  :where(.separator,a,img,p):where([style*=margin-],[style*=padding]):not([style*=float]) {
    margin-right: 0 !important;
    margin-left: 0 !important;
    padding: 0 !important;
  }

  // Corrects alignment of images, for posts published with the Android app
  :where(.separator[style*="text-align: center"]) img {
    margin-right: auto;
    margin-left: auto;
  }

  // Corrects general alignment
  img[data-original-width] {
    display: inline-block;
    max-width: 100% !important;
    height: auto !important;
    vertical-align: top;
  }

  :where(br) {
    // Do not remove line breaks in paragraphs
    &:not(:where(p > *)) {
      display: none;
    }
  }
  // End Blogger Fixes

  // Spacing
  // Grouping elements with the same margin-bottom
  // :where() is used to avoid specificitsy issues
  // First level elements
  > :where(div):not(:where(:last-child)),
  // All elements inside
  :where(p, figure, img, blockquote, ul, ol, pre, table, video, audio, iframe, details) {
    // Ignore the last element
    &:not(:where(video[class], audio[class], :last-child, :where(figure, blockquote) :last-of-type, :where([class*=gallery] *, [class*=columns] > *))) {
      margin-bottom: var(--typography-spacing);
    }
  }
}